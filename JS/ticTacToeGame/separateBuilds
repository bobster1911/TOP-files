const _statusChecker = (newArray) => {
    // check parameters for winning and draw
    console.log(n);
}
_statusChecker(newArray);
    

element.addEventListener('click', function () {

    const idVal = (this.id).slice(3); // array index selection to place the move.
    // create new array with updated data
    const newArray = lastArray.map((i, j) => {if (j == idVal) {
        return startPlayer.symbol; 
    } else {
        return i;
    }});

    // change startPlayer
    if (startPlayer.symbol == playerOne.symbol) {
        startPlayer = playerTwo;

    } else if (startPlayer.symbol == playerTwo.symbol) {
        startPlayer = playerOne;

    } else {
        console.log('An error has occurred.');
    }

    displayBoard.updateBoard(newArray); //displays move
    gameBoard.play(playerOne, playerTwo, startPlayer, 'move', newArray); //sets up event listeners for next move
    //insert check function here

});

const _addClicker = function () {
    console.log(this);
}

element.addEventListener('click', _addClicker);

// ======

element.removeEventListener('click', function () {});

element.addEventListener('click', function () {
    const idVal = (this.id).slice(3); // array index selection to place the move.
    // create new array with updated data
    const newArray = lastArray.map((i, j) => {if (j == idVal) {
        return startPlayer.symbol; 
    } else {
        return i;
    }});

    // change startPlayer
    if (startPlayer.symbol == playerOne.symbol) {
        startPlayer = playerTwo;

    } else if (startPlayer.symbol == playerTwo.symbol) {
        startPlayer = playerOne;

    } else {
        console.log('An error has occurred.');
    }

    displayBoard.updateBoard(newArray); //displays move
    gameBoard.play(playerOne, playerTwo, startPlayer, 'move', newArray); //sets up event listeners for next move
    //insert check function here

});

// ====

element.addEventListener('click', function () {

    const idVal = (this.id).slice(3); // array index selection to place the move.
    // create new array with updated data
    const newArray = lastArray.map((i, j) => {if (j == idVal) {
        return startPlayer.symbol; 
    } else {
        return i;
    }});

    // change startPlayer
    if (startPlayer.symbol == playerOne.symbol) {
        startPlayer = playerTwo;

    } else if (startPlayer.symbol == playerTwo.symbol) {
        startPlayer = playerOne;

    } else {
        console.log('An error has occurred.');
    }

    displayBoard.updateBoard(newArray); //displays move
    gameBoard.play(playerOne, playerTwo, startPlayer, 'move', newArray); //sets up event listeners for next move
});

// _move before

const _move = (lastArray) => {
    const n = 0;
    const _reMapDivs = (n) => { 
        // base case
        if (n < 0 || n > 8) {
            return;
        }

        if (n == 8) {
            console.log('last pick');

        } else if (n == 0) {

            const element = document.getElementById(`div${n}`);

            element.removeEventListener('click', _initialClickerF);

            element.addEventListener('click', _addClicker);

        } else {

        } 
        return _reMapDivs(n+1);
    }; 
    _reMapDivs(n);
} 
_move(lastArray);